name: Bundle validation for the ptb-ltc project

on:
  workflow_dispatch:
  pull_request:
    # The Action workflow will be triggered for pull requests related to any changes made in the following path
    # or its subdirectories
    paths:
      - '**'
defaults:
  run:
    working-directory: ./

env:
  # Defining two environment variables for the Databricks workspace tokens
  # to be used in this yaml (see below)
  STAGING_WORKSPACE_TOKEN: ${{ secrets.STAGING_WORKSPACE_TOKEN }}
  PROD_WORKSPACE_TOKEN: ${{ secrets.PROD_WORKSPACE_TOKEN }}

# Define the jobs to be run in this workflow (1. staging, 2. prod)
jobs:
  # This job validates the bundle configuration for the staging environment
  staging:
    concurrency: ptb-ltc-staging-bundle-job
    runs-on:
      group: linux-runners
      labels: [self-hosted, linux]
    container:
      image: ${{ vars.IMAGE_REGISTRY_PULL }}/docker-mlops/mlops:latest
    permissions:
      id-token: write
      contents: write
    steps:
      # Checkout the code at the head commit of the PR
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
      # Install and setup the Databricks CLI
      - uses: databricks/setup-cli@v0.221.0
      - name: Validate Bundle For Staging
        id: validate
        env:
          DATABRICKS_TOKEN: ${{ env.STAGING_WORKSPACE_TOKEN }}
        run: |
          databricks bundle validate -t staging > validate_output.txt
      - name: Create Comment with Bundle Configuration
        uses: actions/github-script@v7
        id: comment
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const fileContents = fs.readFileSync('validate_output.txt', 'utf8');
            const output = `#### Bundle Staging Config Validated ðŸ–Œ
            <details><summary>Staging Validation Output</summary>
  
            \`\`\`\n
            ${fileContents}
            \`\`\`
  
            </details>`
  
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
  
  prod:
    concurrency: ptb-ltc-prod-bundle-job
    runs-on:
      group: linux-runners
      labels: [self-hosted, linux]
    container:
      image: ${{ vars.IMAGE_REGISTRY_PULL }}/docker-mlops/mlops:latest
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
      - uses: databricks/setup-cli@v0.221.0
      - name: Validate Bundle For Prod
        id: validate
        env:
          DATABRICKS_TOKEN: ${{ env.PROD_WORKSPACE_TOKEN }}
        run: |
          databricks bundle validate -t prod > validate_output.txt
      - name: Create Comment with Bundle Configuration
        uses: actions/github-script@v7
        id: comment
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const fileContents = fs.readFileSync('validate_output.txt', 'utf8');
            const output = `#### Bundle Prod Config Validated ðŸ–Œ
            <details><summary>Prod Validation Output</summary>

            \`\`\`\n
            ${fileContents}
            \`\`\`

            </details>`

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
